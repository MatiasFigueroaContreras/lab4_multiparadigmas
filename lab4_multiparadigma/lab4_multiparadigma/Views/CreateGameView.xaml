<UserControl x:Class="lab4_multiparadigma.Views.CreateGameView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:lab4_multiparadigma.Views" 
        xmlns:viewmodels="clr-namespace:lab4_multiparadigma.ViewModels"
        mc:Ignorable="d"
        Background="#FF050505"
        d:Height="1024" d:Width="1440"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <UserControl.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FF4B4B4B"/>
        <SolidColorBrush x:Key="TextBox.Static.Foreground" Color="White"/>
        <SolidColorBrush x:Key="TextBox.Static.Border"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FFECC601"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FFECC601"/>
        <SolidColorBrush x:Key="Label.Static.Foreground" Color="White"/>
        <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="{StaticResource SecondaryFont}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="64,21,106,146"/>
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
        </Style>

        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="White" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource BorderFocusColor}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource BorderFocusColor}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="64,0,0,0"/>
            <Setter Property="Width" Value="550"/>
            <Setter Property="Height" Value="64"/>
            <Setter Property="Background" Value="{StaticResource BackgroundLightColor}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryTextColor}"/>
            <Setter Property="FontFamily" Value="{StaticResource SecondaryFont}" />
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Padding" Value="10"/>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ComboBoxItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="{StaticResource BackgroundLightColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BorderFocusColor}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="#FF626262" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Button Command="{Binding NavigateBackCommand}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="60,65,0,0" Style="{DynamicResource ImageButtonStyle}">
            <Image Panel.ZIndex="1" Source="../Resources/Images/Buttons/arrow_back.png" />
        </Button>
        <Label Grid.Row="0" x:Name="Tittle" Content="Crear Juego" Margin="0,15,0,0" VerticalAlignment="Top" Height="146" Width="620" Style="{StaticResource TittlesStyle}"/>
        <Grid Grid.Row="1" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--GameName; Row: 0, Column: 0-->
            <Label Grid.Row="0" Grid.Column="0" x:Name="GameNameLabel" Content="Nombre del juego" Style="{DynamicResource LabelStyle}"/>
            <TextBox Text="{Binding GameName}" Grid.Row="0" Grid.Column="0" x:Name="GameNameTextBox" Style="{DynamicResource TextBoxStyle}" Width="550" Height="64" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="64, 0, 0, 0"/>
            <!--NumberCards; Row: 0, Column: 1-->
            <Label Grid.Row="0" Grid.Column="1" x:Name="NumberCardsLabel" Content="Numero de cartas" Style="{DynamicResource LabelStyle}"/>
            <TextBox Text="{Binding NumberCards}" Grid.Row="0" Grid.Column="1" x:Name="NumberCardsTextBox" Style="{DynamicResource TextBoxStyle}" Width="550" Height="64" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="64, 0, 0, 0"/>
            <!--GameMode; Row: 1, Column: 0-->
            <Label Grid.Row="1" Grid.Column="0" x:Name="GameModeLabel" Content="Modo de juego" Style="{DynamicResource LabelStyle}"/>
            <ComboBox ItemContainerStyle="{DynamicResource ComboBoxItemContainerStyle}" Template="{StaticResource ComboBoxTemplate}" SelectedValuePath="Content" SelectedValue="{Binding GameMode}" Grid.Row="1" Grid.Column="0" x:Name="GameModeComboBox" Style="{StaticResource ComboBoxStyle}">
                <ComboBoxItem>Stack Player VS CPU</ComboBoxItem>
                <ComboBoxItem>Stack Player VS Player</ComboBoxItem>
            </ComboBox>
            <!--NumberElements; Row: 1, Column: 1-->
            <Label Grid.Row="1" Grid.Column="1" x:Name="NumberElementsLabel" Content="Numero de elementos por carta" Style="{DynamicResource LabelStyle}"/>
            <TextBox Text="{Binding NumberElements}" Grid.Row="1" Grid.Column="1" x:Name="NumberElementsTextBox" Style="{DynamicResource TextBoxStyle}" Width="550" Height="64" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="64, 0, 0, 0"/>
            <!--Time; Row: 2, Column: 0-->
            <Label Grid.Row="2" Grid.Column="0" x:Name="TimeLabel" Content="Tiempo en segundos" Style="{DynamicResource LabelStyle}"/>
            <TextBox Text="{Binding GameTime}" Grid.Row="2" Grid.Column="0" x:Name="TimeTextBox" Style="{DynamicResource TextBoxStyle}" Width="550" Height="64" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="64, 0, 0, 0"/>
            <!--MaxPlayers; Row: 2, Column: 1-->
            <Label Grid.Row="2" Grid.Column="1" x:Name="MaxPlayersLabel" Content="Maximos jugadores a registrar" Style="{DynamicResource LabelStyle}"/>
            <TextBox Text="{Binding MaxPlayers}" Grid.Row="2" Grid.Column="1" x:Name="MaxPlayersTextBox" Style="{DynamicResource TextBoxStyle}" Width="550" Height="64" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="64, 0, 0, 0"/>
        </Grid>
        <Button Command="{Binding AddCardCommand, Mode=OneWay}" x:Name="CreateGame" Content="Crear" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Center" Style="{StaticResource MainButtonStyle}"/>
    </Grid>
</UserControl>
